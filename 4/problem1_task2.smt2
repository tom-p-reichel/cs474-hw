(declare-fun r2 () Real)
(declare-fun r1 () Real)
(declare-fun s2 () Real)
(declare-fun s1 () Real)
(assert (forall ((rp1 Real) (rp2 Real) (sp1 Real) (sp2 Real))
  (let ((a!1 (+ (* (+ (* r1 90.0) (* r2 30.0)) s1)
                (* (+ (* r1 20.0) (* r2 60.0)) s2)))
        (a!2 (+ (* (+ (* rp1 90.0) (* rp2 30.0)) s1)
                (* (+ (* rp1 20.0) (* rp2 60.0)) s2)))
        (a!4 (+ (* (+ (* r1 10.0) (* r2 70.0)) s1)
                (* (+ (* r1 80.0) (* r2 40.0)) s2)))
        (a!5 (+ (* (+ (* r1 10.0) (* r2 70.0)) sp1)
                (* (+ (* r1 80.0) (* r2 40.0)) sp2))))
  (let ((a!3 (=> (and (= (+ rp1 rp2) 1.0)
                      (>= rp1 0.0)
                      (<= rp1 1.0)
                      (>= rp2 0.0)
                      (<= rp2 1.0))
                 (>= a!1 a!2)))
        (a!6 (=> (and (= (+ sp1 sp2) 1.0)
                      (>= sp1 0.0)
                      (<= sp1 1.0)
                      (>= sp2 0.0)
                      (<= sp2 1.0))
                 (>= a!4 a!5))))
    (and (= (+ r1 r2) 1.0)
         (>= r1 0.0)
         (<= r1 1.0)
         (>= r2 0.0)
         (<= r2 1.0)
         (= (+ s1 s2) 1.0)
         (>= s1 0.0)
         (<= s1 1.0)
         (>= s2 0.0)
         (<= s2 1.0)
         a!3
         a!6)))))


(check-sat)

(get-model)
