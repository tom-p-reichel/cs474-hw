(declare-sort Group 0)
(declare-fun app (Group Group) Group)
(declare-fun w () Group)
(declare-fun e () Group)
(declare-fun inv (Group) Group)
(assert (= (app (app w w) w) (app w (app w w))))
(assert (= (app (app w w) e) (app w (app w e))))
(assert (= (app (app w e) w) (app w (app e w))))
(assert (= (app (app w e) e) (app w (app e e))))
(assert (= (app (app e w) w) (app e (app w w))))
(assert (= (app (app e w) e) (app e (app w e))))
(assert (= (app (app e e) w) (app e (app e w))))
(assert (= (app (app e e) e) (app e (app e e))))
(assert (and (= (app e w) w) (= (app w e) w)))
(assert (= (app e e) e))
(assert (and (= (app w (inv w)) e) (= (app (inv w) w) e)))
(assert (and (= (app e (inv e)) e) (= (app (inv e) e) e)))
(assert (and (distinct w e) (= (app w w) w)))
(assert (and (distinct w e) (= (app e w) e) (= (app w e) e)))

(check-sat)
