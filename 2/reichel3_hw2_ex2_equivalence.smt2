(declare-fun r () Bool)
(declare-fun q () Bool)
(declare-fun p () Bool)
(assert (let ((a!1 (= (and (or q (not r))
                   (or (not p) r)
                   (or (not q) p r)
                   (or q (not q) p)
                   (or q (not r))
                   (or p (not r) r)
                   (or q p (not r))
                   (or (not p) q)
                   (or (not q) r)
                   (or q (not q) r)
                   (or (not r) r)
                   (or q (not r) r)
                   (or (not p) p r)
                   (or (not p) p q)
                   (or q (not q))
                   (or q (not q) p r)
                   (or q p (not r) r)
                   (or (not p) r q)
                   (or (not p) p r q))
              (and (or q (not r))
                   (or (not p) r)
                   (or (not q) p r)
                   (or q (not q) p)
                   (or q (not r))))))
  (not a!1)))
(check-sat)
